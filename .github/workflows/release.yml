name: Build artifacts

on:
  push:
    branches:
      - master
    tags:
      - v**

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js 14.x
      uses: actions/setup-node@v1
      with:
        node-version: 14.x

    - name: "Install NPM packages"
      run: npm ci

    - name: "Build bundle with pkg"
      run: npm run build

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: bundles
        path: ./dist

  release:
    name: Create Github Release
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    # - name: Get short tag name
    #   uses: jungwinter/split@v1
    #   id: split
    #   with:
    #     msg: ${{ github.ref }}
    #     seperator: /
    - name: Create Release
      id: create_release
      uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        allowUpdates: true
        # tag: ${{ steps.split.outputs._2 }}
        name: Unreleased
        commit: ${{ github.sha }}
        draft: false
        prerelease: true
        artifacts: "dist/*.*"

  # publish:
  #   needs: [release]
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       version: [linux, macos, windows]

  #   steps:
  #   - uses: actions/checkout@v1

  #   - name: Fetch artifacts
  #     uses: actions/download-artifact@v1
  #     with:
  #       name: ${{ matrix.version }}
  #       path: ./${{ matrix.version }}

  #   - name: Build Zip Archives
  #     run: |
  #          mkdir -p workdir/
  #          mv ${{ matrix.version }}/ workdir/v/
  #          cd workdir/v/
  #          chmod 755 v || true
  #          chmod 755 v.exe || true
  #          cd ..
  #          zip -r9 --symlinks ../v_${{ matrix.version }}.zip v/*
  #          cd ..
  #          rm -rf workdir/

  #   - name: Get short tag name
  #     uses: jungwinter/split@v1
  #     id: split
  #     with:
  #       msg: ${{ github.ref }}
  #       seperator: /

  #   - name: Get release
  #     id: get_release_info
  #     uses: leahlundqvist/get-release@v1.3.1
  #     env:
  #       GITHUB_TOKEN: ${{ github.token }}
  #     with:
  #       tag_name: ${{ steps.split.outputs._2 }}

  #   - name: Upload Release Asset
  #     id: upload-release-asset
  #     uses: actions/upload-release-asset@v1.0.1
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     with:
  #       upload_url: ${{ steps.get_release_info.outputs.upload_url }}
  #       asset_path: ./v_${{ matrix.version }}.zip
  #       asset_name: v_${{ matrix.version }}.zip
  #       asset_content_type: application/zip
